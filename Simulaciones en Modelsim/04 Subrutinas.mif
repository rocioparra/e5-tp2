-- Copyright (C) 2019  Intel Corporation. All rights reserved.
-- Your use of Intel Corporation's design tools, logic functions 
-- and other software and tools, and any partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Intel Program License 
-- Subscription Agreement, the Intel Quartus Prime License Agreement,
-- the Intel FPGA IP License Agreement, or other applicable license
-- agreement, including, without limitation, that your use is for
-- the sole purpose of programming logic devices manufactured by
-- Intel and sold by Intel or its authorized distributors.  Please
-- refer to the applicable agreement for further details, at
-- https://fpgasoftware.intel.com/eula.

-- Quartus Prime generated Memory Initialization File (.mif)

WIDTH=14;
DEPTH=2048;

ADDRESS_RADIX=HEX;
DATA_RADIX=BIN;

-- Prueba de branches
-- calculo de branches: 
--	pc=pc+s=dest_addr => s = dest_addr-pc
--  el branch se procesa cuando el bsr esta en el bus de instrucciones, y pc vale la direccion del salto
--  entonces s=dest_addr-bsr_addr
--	- primer bsr:	s = 0x010-0x002 = 0x00E = 000 0000 1110b
--	- segundo bsr: 	s = 0x020-0x012 = 0x00E = 000 0000 1110b
CONTENT BEGIN
	000	: 0001000000000000000001;	-- MOK W,1
	001	: 0011000000000000000000;	-- MOV R0,W  -- Para ver que llegó ahí
	002	: 0111000000011100000000;	-- BSR 0x00E -- subrutina que escribe w
	003	: 0011000000000000000000;	-- MOV R3,W  -- cambio el valor de w en la subrutina?
   	004 : 1000000010000100000000;	-- JMP 0x021 -- salto a despues de las subrutinas
    --
    [004..00F]  :   0001000000000000010000;-- MOK W,16
	--
	-- subrutina 1: w=r1=3, llamo a otra subrutina y vuelvo
	010	: 0001000000000000000011;	-- MOK W,3
	011 : 0011000000000000000000;	-- MOV R1,W --Para ver que llegó ahí
	012 : 0111000000011100000000;	-- BSR 0x00E -- subrutina que no hace nada
	013	: 0000011000000000000000;   -- RET
	--
	[014..01F]  :   0001000000000000010000;-- MOK W,16
	--
	-- subrutina 2: solo ret
	020	: 0000011000000000000000;   -- RET
	--
	-- fin del codigo
	[021..7FF]  :   0001000000000000010000;-- MOK W,11
END;


	--032  :   0001000000000000000000;       -- MOK W,0
	--033  :   0000000000000000000000;       -- CPL W
	--034  :   0001110000000011111111; 	   -- ADK W,0xFF Esto debería poner el carry en 1
	
